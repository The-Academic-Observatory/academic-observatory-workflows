{#
  Copyright 2020 Curtin University.
  Authors: James Diprose, Richard Hosking

  The purpose of this script it to export the output_types section from any of the aggregration tables (country, institution, group, etc)
  Primarily, the goal is to create what is a nested array, and turn that into a flat table that can be exported into Elasticsearch for use with Kibana
#}
SELECT
  id                                      AS {{ aggregate }}_id,
  name                                    AS {{ aggregate }}_name,
  country                                 AS {{ aggregate }}_country,
  country_code                            AS {{ aggregate }}_country_code,
  region                                  AS {{ aggregate }}_region,
  subregion                               AS {{ aggregate }}_subregion,
  coordinates                             AS {{ aggregate }}_coordinates,
  DATE(time_period, 12, 31)               AS published_year,
  output_types.output_type                AS output_types_output_type,
  output_types.total_outputs              AS output_types_total_outputs,
  output_types.num_oa_outputs             AS output_types_num_oa_outputs,
  output_types.num_green_outputs          AS output_types_num_green_outputs,
  output_types.num_gold_outputs           AS output_types_num_gold_outputs,
  output_types.num_gold_just_doaj_outputs AS output_types_num_gold_just_doaj_outputs,
  output_types.num_hybrid_outputs         AS output_types_num_hybrid_outputs,
  output_types.num_bronze_outputs         AS output_types_num_bronze_outputs,
  output_types.num_green_only_outputs     AS output_types_num_green_only_outputs,
  ROUND(SAFE_DIVIDE((output_types.num_oa_outputs   ) * 100, output_types.total_outputs), 2) AS output_types_percent_oa,
  ROUND(SAFE_DIVIDE((output_types.num_green_outputs) * 100, output_types.total_outputs), 2) AS output_types_percent_green,
  ROUND(SAFE_DIVIDE((output_types.num_gold_outputs ) * 100, output_types.total_outputs), 2) AS output_types_percent_gold
FROM `{{ project_id }}.{{ dataset_id }}.{{ table_id }}{{ release_date.strftime('%Y%m%d') }}`,
UNNEST(output_types) AS output_types
ORDER BY id, published_year ASC

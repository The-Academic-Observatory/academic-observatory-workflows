name: "Build API Container Develop"

on:
  push:
    branches:
      - INF-73_data_API

defaults:
  run:
    working-directory: ./academic_observatory_workflows_api

env:
  SERVICE: ao-api
  REGION: us-central1

jobs:
#  build-and-push-to-gcr:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout project
#        uses: actions/checkout@v2
#      - uses: RafikFarhad/push-to-gcr-github-action@v3.0.2
#        with:
#          gcloud_service_key: ${{ secrets.DEVELOP_GCP_SERVICE_KEY }}
#          registry: gcr.io
#          project_id: ${{ secrets.DEVELOP_GCP_PROJECT_ID }}
#          image_name: observatory-api
#          image_tag: latest
#          dockerfile: ./observatory-api/Dockerfile
#          context: ./observatory-api/

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.DEVELOP_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.DEVELOP_GCP_SERVICE_KEY }}
          export_default_credentials: true  # Set to true to authenticate the Cloud Run action

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ secrets.DEVELOP_GCP_PROJECT_ID }}/${{ env.SERVICE }}:${{ github.event.number }}
          docker push gcr.io/${{ secrets.DEVELOP_GCP_PROJECT_ID }}/${{ env.SERVICE }}:${{ github.event.number }}

      - name: Get HEAD Commit Hash
        id: commit
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.4.0
        with:
          service: ${{ env.SERVICE }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.event.number }}
          no_traffic: true
          suffix: ${{ github.event.number }}-${{ steps.commit.outputs.hash }}
          region: ${{ env.REGION }}
          tag: pr-${{ github.event.number }}=myapp-${{ github.event.number }}-${{ steps.commit.outputs.hash }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

#  deploy-to-cloud-run:
#    runs-on: ubuntu-20.04
#    strategy:
#      matrix:
#        node-version: [12.x]
#    steps:
#      - name: Checkout Commit
#        uses: actions/checkout@v2
#        with:
#          ref: ${{ github.event.pull_request.head.sha }}
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: Setup Google Cloud SDK
#        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#        with:
#          project_id: ${{ secrets.PROJECTID }}
#          service_account_key: ${{ secrets.RUN_SA_KEY }}
#          export_default_credentials: true
#      - name: Install Google Cloud SDK Beta Components
#        run: gcloud components install beta
#      - name: Setup Docker for GCR
#        run: gcloud auth configure-docker
#      - name: Build Docker Image
#        run: docker build -t gcr.io/${secrets.PROJECTID}/IMAGENAME:${{github.event.number}}
#      - name: Push Docker Image To GCR
#        run: docker push gcr.io/${secrets.PROJECTID}/IMAGENAME:${{github.event.number}}
#      - name: Get HEAD Commit Hash
#        id: commit
#        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"
#      - name: Deploy Revision On Cloud Run
#        run: gcloud beta run deploy "myapp" --image "gcr.io/${secrets.PROJECTID}/IMAGENAME:${{github.event.number}}" --no-traffic --platform managed --revision-suffix=${{github.event.number}}-${{steps.commit.outputs.hash}} --port=3000 --region=us-east1
#      - name: Tag Revision On Cloud Run
#        run: gcloud beta run services update-traffic "myapp" --update-tags pr-${{github.event.number}}=myapp-${{github.event.number}}-${{steps.commit.outputs.hash}} --platform=managed --region=us-east1
#
#      - name: Post PR comment with preview deployment URL
#        uses: mshick/add-pr-comment@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          message: |
#            Successfully deployed preview revision at https://pr-${{github.event.number}}---myapp-abcdef123-ab.a.run.app
#          allow-repeats: false